Escribir un programa que pregunte por una muestra de números, separados por comas, los guarde en una lista y muestre por pantalla su media y desviación típica.

sample = input("Introduce una muestra de números separados por comas: ")
sample = sample.split(',')
n = len(sample)
for i in range(n):
    sample[i] = int(sample[i])
sample = tuple(sample)
sum = 0
sumsq = 0
for i in sample:
    sum += i
    sumsq += i**2
mean = sum/n
stdev = (sumsq/n-mean**2)**(1/2)
print('La media es', mean, ', y la desviación típica es', stdev)


-------------------------------------------------------------------------

Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla todos los números impares desde 1 hasta ese número separados por comas.

n = int(input("Introduce un número entero positivo: "))
for i in range(n, -1, -1):
    print(i, end=", ")


.-----------------------------------------------------------------------------

PUNTEROS


main()                      /* ejemplo de uso de un puntero */

{

int index,*pt1,*pt2;

index = 39;                      /* cualquier valor numérico */

pt1 = &index;                   /* la dirección de index */

pt2 = pt1;

printf("El valor es  %d %d %d\n",index,*pt1,*pt2);

*pt1 = 13;           /* esto cambia el valor de index */

printf("El valor es %d %d %d\n",index,*pt1,*pt2);

}
----------------------------------------------------------------------------------

PUNTEROS 

#include <string.h>
 
#include <stdio.h>
 
main()
 
{
 
char strg[40],*there,one,two;
 
int *pt,list[100],index;
 
strcpy(strg,"Esta es una cadena de caracteres.");
 
one = strg[0];                 /* one y two son idénticos */
 
two = *strg;
 
printf("El primer resultado es %c %c\n",one,two);
 
one = strg[8];                /* one y two son idénticos */
 
two = *(strg+8);
 
printf("El segundo resultado es %c %c\n",one,two);
 
there = strg+10;        /* strg+10 es idéntico a strg[10] */
 
printf("El tercer resultado es %c\n",strg[10]);
 
printf("El cuarto resultado es %c\n",*there);
 
for (index = 0;index < 100;index++)
 
list[index] = index + 100;
 
pt = list + 27;
 
printf("El quinto resultado es %d\n",list[27]);
 
printf("El sexto resultado es %d\n",*pt);
 
}
En este programa hemos definido varias variables, y 2 punteros. El primer puntero, «there» es un puntero tipo «char», ya que apunta a una variable de tipo «char» y, el segundo, «pt» apunta a una variable «int». Hemos definido también dos arrays, «strg» y «list». Los usaremos para mostrar la relación entre punteros y nombres del array.

-----------------------------------------------------------------

COMBINANDO PUNTEROS Y ESTRUCTURAS
STRUCT3.C

 

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
main()
 
{
 
struct {
 
char initial;
 
int age;
 
int grade;
 
} kids[12],*point;
 
int index;
 
for (index = 0;index < 12;index++) {
 
point = kids + index;
 
point->initial = 'A' + index;
 
point->age = index ;
 
point->grade = 84;
 
}
 
kids[3].age = kids[5].age = 17;
 
kids[2].grade = kids[6].grade = 92;
 
kids[4].grade = 57;
 
for (index = 0;index < 12;index++) {
 
point = kids + index;
 
printf("%c tiene %d años y un grado escolar de %d\n",
 
(*point).initial, kids[index].age,
 
point->grade);
 
}
 
}